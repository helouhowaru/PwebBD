// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PwebBD.Models.dbModels;

#nullable disable

namespace PwebBD.Migrations
{
    [DbContext(typeof(PwebdbContext))]
    partial class PwebdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PwebBD.Models.dbModels.Datosreservacion", b =>
                {
                    b.Property<int>("IdReservacion")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdQuinta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NumInvitados")
                        .HasColumnType("int");

                    b.HasKey("IdReservacion")
                        .HasName("PK_datosreservacion_IdReservacion");

                    b.HasIndex(new[] { "IdEstado" }, "IdEstado");

                    b.HasIndex(new[] { "IdQuinta" }, "IdQuinta");

                    b.HasIndex(new[] { "IdUsuario" }, "IdUsuario");

                    b.ToTable("datosreservacion", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Estado1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("estado");

                    b.HasKey("IdEstado")
                        .HasName("PK_estado_IdEstado");

                    b.ToTable("estado", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Imgsquintum", b =>
                {
                    b.Property<int>("IdImg")
                        .HasColumnType("int");

                    b.Property<string>("ImgQuinta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdImg")
                        .HasName("PK_imgsquinta_IdImg");

                    b.ToTable("imgsquinta", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Quintum", b =>
                {
                    b.Property<int>("IdQuinta")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdImagen")
                        .HasColumnType("int");

                    b.Property<int>("IdRedes")
                        .HasColumnType("int");

                    b.Property<int>("PrecioPorPersona")
                        .HasColumnType("int");

                    b.HasKey("IdQuinta")
                        .HasName("PK_quinta_IdQuinta");

                    b.HasIndex(new[] { "IdImagen" }, "IdImagen");

                    b.HasIndex(new[] { "IdRedes" }, "IdRedes");

                    b.HasIndex(new[] { "PrecioPorPersona" }, "PrecioReservacion");

                    b.ToTable("quinta", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Redessociale", b =>
                {
                    b.Property<int>("IdRedes")
                        .HasColumnType("int");

                    b.Property<string>("RedSoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdRedes")
                        .HasName("PK_redessociales_IdRedes");

                    b.ToTable("redessociales", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("rol");

                    b.HasKey("IdRol")
                        .HasName("PK_rol_IdRol");

                    b.ToTable("rol", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contraseña");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("correo");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("Telefono")
                        .HasColumnType("int")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK_usuario_IdUsuario");

                    b.HasIndex(new[] { "IdRol" }, "IdRol");

                    b.ToTable("usuario", "pwebdb");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Datosreservacion", b =>
                {
                    b.HasOne("PwebBD.Models.dbModels.Estado", "IdEstadoNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdEstado")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_3");

                    b.HasOne("PwebBD.Models.dbModels.Quintum", "IdQuintaNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdQuinta")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_4");

                    b.HasOne("PwebBD.Models.dbModels.Usuario", "IdUsuarioNavigation")
                        .WithMany("Datosreservacions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("datosreservacion$datosreservacion_ibfk_2");

                    b.Navigation("IdEstadoNavigation");

                    b.Navigation("IdQuintaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Quintum", b =>
                {
                    b.HasOne("PwebBD.Models.dbModels.Imgsquintum", "IdImagenNavigation")
                        .WithMany("Quinta")
                        .HasForeignKey("IdImagen")
                        .IsRequired()
                        .HasConstraintName("quinta$quinta_ibfk_1");

                    b.HasOne("PwebBD.Models.dbModels.Redessociale", "IdRedesNavigation")
                        .WithMany("Quinta")
                        .HasForeignKey("IdRedes")
                        .IsRequired()
                        .HasConstraintName("quinta$quinta_ibfk_2");

                    b.Navigation("IdImagenNavigation");

                    b.Navigation("IdRedesNavigation");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Usuario", b =>
                {
                    b.HasOne("PwebBD.Models.dbModels.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("usuario$usuario_ibfk_1");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Estado", b =>
                {
                    b.Navigation("Datosreservacions");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Imgsquintum", b =>
                {
                    b.Navigation("Quinta");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Quintum", b =>
                {
                    b.Navigation("Datosreservacions");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Redessociale", b =>
                {
                    b.Navigation("Quinta");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PwebBD.Models.dbModels.Usuario", b =>
                {
                    b.Navigation("Datosreservacions");
                });
#pragma warning restore 612, 618
        }
    }
}
